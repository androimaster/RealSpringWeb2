package com.spring.service;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.spring.repository.CommonDao;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class BoardService {
    public final CommonDao dao;

    public String upload(MultipartHttpServletRequest request) {
        String result = "home/registOK";
        try {
            Iterator<String> itr = request.getFileNames();
            MultipartFile mpf = null;
            int cnt = 0;
            String sGroupKey = dao.selectStr("board.selectFileGroupKey", null);
            while (itr.hasNext()) {
                cnt++;
                mpf = request.getFile(itr.next());
                if(mpf.isEmpty()) continue;
                System.out.println(mpf.getOriginalFilename() + " uploaded!");
                
                String sPath = "";
               
                sPath = "c:" + File.separator + "NAS"
                        + File.separator;
                
                //1. 파일관리 테이블에 데이터를 insert한다.
                Map param = new HashMap();
                param.put("GROUP_KEY", sGroupKey);
                param.put("FILE_KEY", cnt);
                param.put("FILE_REALNAME", mpf.getOriginalFilename());
                param.put("FILE_NAME", Calendar.getInstance().getTimeInMillis());
                param.put("FILE_PATH", sPath);
                param.put("FILE_LENGTH", mpf.getBytes().length);
                param.put("FILE_TYPE", mpf.getContentType());
                param.put("USER_ID", System.getProperty("spring.profiles.active"));

                //2. 지정된 위치가 존재하는지 확인하고 없으면 경로를 생성한다.
                File chkDir = new File(sPath);
                if(!chkDir.isDirectory()) {
                    chkDir.mkdirs();
                }
                   
                //3. 지정된 위치에 파일을 복사한다.
                FileCopyUtils.copy(mpf.getBytes(), new FileOutputStream(sPath + param.get("FILE_NAME")));
                                
                dao.insert("board.insertFileInfo", param);
            }
        } catch (IOException e) {
            e.printStackTrace();
            result = "home/registFail";
        }
        return result;
    }
}
